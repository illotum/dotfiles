[user]
  name = Alex Valiushko
  email = valiushk@amazon.com
[github]
  user = illotum
[core]
  whitespace = fix,-indent-with-non-tab,space-before-tab,trailing-space,cr-at-eol
    legacyheaders = false
    quotepath = false
    trustctime = false
  excludesfile = ~/.gitignore
  pager = less -FMRiX
  hooksPath = /Users/valiushk/.git-templates/hooks
[repack]
    usedeltabaseoffset = true
[apply]
    whitespace = fix
[transfer]
  fsckobjects = true
[fetch]
  fsckobjects = true
[receive]
  fsckobjects = true
[push]
  default = matching
[pull]
  rebase = merges
[branch]
  autosetupmerge = always
  autosetuprebase = always
[submodule]
  fetchjobs = 4
[status]
  submodulesummary = true
  branch = true
[rerere]
  enabled = 1
  autoupdate = 1
[color]
  ui = auto
    interactive = auto
; [pager]
;   log = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
;   show = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
;   diff = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
[diff]
    algorithm = histogram
  renames = copy
  wordregex = [^[:space:]]
  mnemonicprefix = true
  compactionheuristic = true
  submodule = log
  tool = difftastic
[difftool]
        prompt = false
[difftool "difftastic"]
        cmd = difft  --background=light "$LOCAL" "$REMOTE"
[mergetool "splice"]
  cmd = "vi -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
  trustexitcode = true
[merge]
  summary = true
  tool = splice
; [interactive]
;   diffFilter = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight
[gitflow "prefix"]
  feature = feature/
  release = release/
  hotfix = hotfix/
  support = support/
  versiontag = v
[alias]
  a = add --all
  ai = add -i
  #############
  ap = apply
  as = apply --stat
  ac = apply --check
  #############
  ama = am --abort
  amr = am --resolved
  ams = am --skip
  #############
  b = branch
  ba = branch -a
  bd = branch -d
  br = branch -r
  #############
  c = commit
  ca = commit -a
  cm = commit -m
  cem = commit --allow-empty -m
  cam = commit -am
  cd = commit --amend
  cad = commit -a --amend
  ced = commit --allow-empty --amend
  #############
  d = diff
  dc = diff --cached
  dl = difftool
  dlc = difftool --cached
  dk = diff --check
  dp = diff --patience
  dck = diff --cached --check
  #############
  f = fetch
  fo = fetch origin
  fu = fetch upstream
  #############
  fp = format-patch
  #############
  fk = fsck
  #############
  g = grep -p
  #############
  l = log --oneline
  lg = log --oneline --graph --decorate
  #############
  ls = ls-files
  lsf = "!git ls-files | grep -i"
  #############
  m = merge
  ma = merge --abort
  mc = merge --continue
  ms = merge --skip
  #############
  o = checkout
  ob = checkout -b
  #############
  pr = prune -v
  #############
  ps = push
  psf = push -f
  psu = push -u
  pso = push origin
  psao = push --all origin
  psfo = push -f origin
  psuo = push -u origin
  psom = push origin main
  psfom = push -f origin main
  psuom = push -u origin main
  #############
  pl = pull
  plu = pull -u
  plo = pull origin
  plp = pull upstream
  plom = pull origin main
  plpm = pull upstream main
  #############
  pb = pull --rebase
  pbo = pull --rebase origin
  pbp = pull --rebase upstream
  pbom = pull --rebase origin main
  pbpm = pull --rebase upstream main
  #############
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase --interactive
  rbs = rebase --skip
  #############
  re = reset
  rh = reset HEAD
  reh = reset --hard
  rem = reset --mixed
  res = reset --soft
  rehh = reset --hard HEAD
  remh = reset --mixed HEAD
  resh = reset --soft HEAD
  #############
  r = remote
  ra = remote add
  rr = remote rm
  rv = remote -v
  rm = remote rename
  rp = remote prune
  rs = remote show
  rao = remote add origin
  rau = remote add upstream
  rso = remote show origin
  rsu = remote show upstream
  rpo = remote prune origin
  rpu = remote prune upstream
  #############
  s = status
  sb = status -s -b
  #############
  sa = stash apply
  sc = stash clear
  sd = stash drop
  sl = stash list
  sp = stash pop
  ss = stash save
  sw = stash show
  #############
  w = show
  wp = show -p
  wr = show -p --no-color
  #############
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit
  #############
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  unassumeall = !git assumed | xargs git update-index --no-assume-unchanged
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  #############
  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
  #############
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  #############
  barebranch = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
  purge = clean -xffd .
  flat = clone --depth 1
  subpull = !git submodule foreach git pull --tags origin main
  subrepo = !sh -c 'filter-branch --prune-empty --subdirectory-filter $1 main' -
  human = name-rev --name-only --refs=refs/heads/*
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  dag = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)%an <%ae>%C(reset) %C(magenta)%cr%C(reset)%C(auto)%d%C(reset)%n%s' --date-order
[url "git@github.com:"]
  pushInsteadOf = "git://github.com/"
  pushInsteadOf = "https://github.com/"
[mergetool]
  keepBackup = false
[init]
  defaultBranch = main
